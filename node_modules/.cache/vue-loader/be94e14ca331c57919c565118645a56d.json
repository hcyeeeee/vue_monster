{"remainingRequest":"/Users/news/Desktop/source 2/topic_taiwanghost/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/news/Desktop/source 2/topic_taiwanghost/src/components/Intro.vue?vue&type=template&id=3e330e28&scoped=true&","dependencies":[{"path":"/Users/news/Desktop/source 2/topic_taiwanghost/src/components/Intro.vue","mtime":1659511451780},{"path":"/Users/news/Desktop/source 2/topic_taiwanghost/node_modules/babel-loader/lib/index.js","mtime":1659359560903},{"path":"/Users/news/Desktop/source 2/topic_taiwanghost/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1659359568132},{"path":"/Users/news/Desktop/source 2/topic_taiwanghost/node_modules/cache-loader/dist/cjs.js","mtime":1659359561883},{"path":"/Users/news/Desktop/source 2/topic_taiwanghost/node_modules/vue-loader/lib/index.js","mtime":1659359568132}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}